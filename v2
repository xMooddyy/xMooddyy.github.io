{"meta":{"generator":"0.10.0","format":20,"date":1623106726352},"custom":null,"classes":[{"name":"BaseCommand","construct":{"name":"BaseCommand","params":[{"name":"options","description":"Options for the command.","type":[[["CommandOptions"]]]}]},"methods":[{"name":"checkOwner","description":"Checks if the user is a bot owner","params":[{"name":"user","description":"User to check if they're a bot owner","type":[[["User"]]]}],"meta":{"line":53,"file":"BaseCommand.js","path":"lib/structures"}},{"name":"checkPermission","description":"Checks permission for the member in the guild.","params":[{"name":"member","description":"Member of the guild","type":[[["GuildMember"]]]},{"name":"perms","description":"Permissions to check for.","type":[[["Array","<"],["PermissionString",">"]]]}],"meta":{"line":61,"file":"BaseCommand.js","path":"lib/structures"}}],"meta":{"line":22,"file":"BaseCommand.js","path":"lib/structures"}},{"name":"Prompt","description":"An instance of this is created whenever `Call#prompt` is called successfully and then added to `handler#prompts` and removed once the prompt is\rfinished. All parameters translate directly into properties.","construct":{"name":"Prompt","params":[{"name":"user","description":"The user the prompt is based around.","type":[[["User"]]]},{"name":"channel","description":"The channel the prompt is in.","type":[[["TextChannel"]]]},{"name":"options","description":"The options of the prompt.","type":[[["PromptOptions"]]]},{"name":"resolve","description":"The function to resolve the promise.","type":[[["function"]]]},{"name":"reject","description":"The function to reject the promise.","type":[[["function"]]]},{"name":"ended","description":"Whether or not the prompt has been ended.","type":[[["boolean"]]]},{"name":"attempts","description":"The amount of attempts the user has made to complete the prompt.","type":[[["number"]]]},{"name":"values","description":"The `Message` objects collected by the prompt.","type":[[["Collection"]]]}]},"methods":[{"name":"addInput","description":"Adds a message object to the values if it passes the filter provided, otherwise calling the correct function provided.","params":[{"name":"message","type":[[["DiscordMessage"]]]}],"returns":[[["any"]]],"meta":{"line":61,"file":"Prompt.js","path":"lib/structures"}},{"name":"end","description":"Ends the prompt for whatever reason, rejecting the promise if an unsuccessful completion.","params":[{"name":"reason","type":[[["time","'"]],[["cancelled","'"]],[["attempts","'"]],[["success","'"]]]}],"returns":[[["any"]]],"meta":{"line":96,"file":"Prompt.js","path":"lib/structures"}}],"meta":{"line":29,"file":"Prompt.js","path":"lib/structures"}}],"interfaces":[],"typedefs":[{"name":"CommandOptions","type":[[["object"]]],"props":[{"name":"name","description":"Name of the command.","type":[[["string"]]]},{"name":"category","description":"Category of the command.","type":[[["string"]]]},{"name":"aliases","description":"Aliases for the command.","nullable":true,"type":[[["Array","<"],["string",">"]]]},{"name":"usage","description":"Usage for the command.","nullable":true,"type":[[["string"]]]},{"name":"accessableby","description":"Command accessableby.","nullable":true,"type":[[["string"]]]},{"name":"cooldown","description":"Command cooldown in seconds.","nullable":true,"type":[[["number"]]]},{"name":"ownerOnly","description":"If the command is restricted to the bot owner.","nullable":true,"type":[[["boolean"]]]},{"name":"userPermissions","description":"Permissions for the user.","nullable":true,"type":[[["Array","<"],["PermissionString",">"]]]},{"name":"botPermissions","description":"Permissions for the bot.","nullable":true,"type":[[["Array","<"],["PermissionString",">"]]]},{"name":"examples","description":"Examples for the command.","nullable":true,"type":[[["Array","<"],["string",">"]]]},{"name":"userRoles","description":"Roles that are able to run the command.","nullable":true,"type":[[["Array","<("],["string","|"],["RoleResolvable","|"],["Role",")>"]]]},{"name":"guildOnly","description":"If the command is restricted to guilds.","nullable":true,"type":[[["boolean"]]]}],"meta":{"line":3,"file":"BaseCommand.js","path":"lib/structures"}},{"name":"PromptOptions","description":"Note: Setting the `time` option to `Infinity` is strongly disadvised, as it can cause confusion for the user, and may also cause the promise to\rnever be garbage collected if the prompt is never fulfilled.","type":[[["object"]]],"props":[{"name":"time","description":"The amount of milliseconds to wait before ending the prompt from time. Set this to `0` or `Infinity` for no time limit.","type":[[["number"]]]},{"name":"cancellable","description":"Whether or not the user should be able to reply with cancel to cancel the ongoing prompt.","nullable":true,"type":[[["boolean"]]]},{"name":"filter","description":"Called with the message and `Prompt` instance to determine whether a\rmessage should be deleted or not. Should not include filtering the user (done internally).","type":[[["Array","<"],["any",">"]],[["number"]],[["function"]],[["RegExp"]]]},{"name":"correct","description":"Called with the message and `Prompt` instance that should handle when\ra message does not pass the filter.","type":[[["string"]],[["function"]]]},{"name":"messages","description":"The amount of messages to accept before resolving the promise.","nullable":true,"type":[[["number"]]]},{"name":"attempts","description":"The amount of times the user is able to fail the filter before having the prompt cancelled. You can set this to `0` or\r`Infinity` for infinite attempts permitted.","nullable":true,"type":[[["number"]]]},{"name":"autoRespond","description":"Whether or not the bot should automatically respond when the prompt is cancelled/out of time with\r`Cancelled prompt.`, or when the max attempts are exceeded, `Too many attempts..` If disabled, you should probably handle this on the promise's\rrejection.","nullable":true,"type":[[["boolean"]]]},{"name":"invisible","description":"Whether or not the prompt is permitted to coexist with another prompt in the same channel.","nullable":true,"type":[[["boolean"]]]},{"name":"matchUntil","description":"Continues matching until the function provided returns true\ror when the amount of messages matched is equal to options.messages.","nullable":true,"type":[[["function"]]]}],"meta":{"line":5,"file":"Prompt.js","path":"lib/structures"}}],"externals":[]}
